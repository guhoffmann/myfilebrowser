# Minimal lighttpd configuration file for myfilebrowser!
# This one is for https and authorization!!!

server.modules = (
    "mod_auth", 
    "mod_fastcgi",
    "mod_cgi",
    "mod_rewrite"
)

# Adjust all paths to suit your machine!!!

#server.document-root = "/home/pi/extern/data/html/myfilebrowser" 
#server.errorlog = "/home/pi/extern/data/html/myfilebrowser/error.log" 
#server.pid-file = "/home/pi/extern/data/html/myfilebrowser/myfilebrowser.pid" 
server.document-root = "/mnt/sdb3/uwe/MyDevelop/MyWeb/myfilebrowser" 
#server.errorlog = "/root/myfilebrowser-error.log" 
server.pid-file = "/root/myfilebrowser.pid" 

server.port = 2080
server.username="pi"
server.groupname="pi"
index-file.names = ( "index.php")
static-file.exclude-extensions = ( ".php" )

mimetype.assign = (  
    ".pdf"   => "application/pdf",
    ".class" => "application/octet-stream",
    ".pac"   => "application/x-ns-proxy-autoconfig",
    ".swf"   => "application/x-shockwave-flash",
    ".wav"   => "audio/x-wav",
    ".gif"   => "image/gif",
    ".jpg"   => "image/jpeg",
    ".jpeg"  => "image/jpeg",
    ".png"   => "image/png",
    ".svg"   => "image/svg+xml",
    ".css"   => "text/css",
    ".html"  => "text/html",
    ".htm"   => "text/html",
    ".js"    => "text/javascript",
    ".txt"   => "text/plain",
    ".dtd"   => "text/xml",
    ".7z"    => "application/zip",
    ".xml"   => "text/xml" 
 )

#fastcgi.server = ( ".php" => ((
# "bin-path" => "/usr/bin/php-cgi",
# "socket" => "/home/pi/extern/data/html/myfilebrowser/php.socket"
# )))
fastcgi.server = ( ".php" => ((
 "bin-path" => "/usr/bin/php-cgi",
 "socket" => "/mnt/sdb3/uwe/MyDevelop/MyWeb/myfilebrowser/php.socket"
 )))

### Add some safety for production usage

# Enable SSL engine 
ssl.engine = "enable" 
#ssl.pemfile = "/etc/lighttpd/ssl/myfilebrowser.pem" 
ssl.pemfile = "/mnt/sdb3/uwe/MyDevelop/MyWeb/myfilebrowser/server.pem" 

# password security

#$HTTP["host"] =~ "" {
    # auth.backend = "htpasswd"
    # auth.backend.htpasswd.userfile = "/etc/lighttpd/myfilebrowser.users"
    # auth.require = (
    # "/" => ("method" => "basic", "realm" => "Anmelden", "require" => "valid-user"),
    # )
#}

